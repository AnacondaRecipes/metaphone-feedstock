From 6be575f8ed9eee5e46e23a6141a292347d71ee84 Mon Sep 17 00:00:00 2001
From: Lorenzo Pirritano <lpirritano@anaconda.com>
Date: Wed, 28 Feb 2024 14:01:27 -0600
Subject: [PATCH] assertEqual over deprecated assertEquals

---
 metaphone/tests/test_metaphone.py | 214 +++++++++++++++---------------
 1 file changed, 107 insertions(+), 107 deletions(-)

diff --git a/metaphone/tests/test_metaphone.py b/metaphone/tests/test_metaphone.py
index 3750708..a67f581 100644
--- a/metaphone/tests/test_metaphone.py
+++ b/metaphone/tests/test_metaphone.py
@@ -10,79 +10,79 @@ class MetaphoneTestCase(unittest.TestCase):
     """
     def test_single_result(self):
         result = doublemetaphone(u"aubrey")
-        self.assertEquals(result, ('APR', ''))
+        self.assertEqual(result, ('APR', ''))
 
     def test_double_result(self):
         result = doublemetaphone(u"richard")
-        self.assertEquals(result, ('RXRT', 'RKRT'))
+        self.assertEqual(result, ('RXRT', 'RKRT'))
 
     def test_general_word_list(self):
         result = doublemetaphone('Jose')
-        self.assertEquals(result, ('JS', 'HS'))
+        self.assertEqual(result, ('JS', 'HS'))
         result = doublemetaphone('cambrillo')
-        self.assertEquals(result, ('KMPRL', 'KMPR'))
+        self.assertEqual(result, ('KMPRL', 'KMPR'))
         result = doublemetaphone('otto')
-        self.assertEquals(result, ('AT', ''))
+        self.assertEqual(result, ('AT', ''))
         result = doublemetaphone('aubrey')
-        self.assertEquals(result, ('APR', ''))
+        self.assertEqual(result, ('APR', ''))
         result = doublemetaphone('maurice')
-        self.assertEquals(result, ('MRS', ''))
+        self.assertEqual(result, ('MRS', ''))
         result = doublemetaphone('auto')
-        self.assertEquals(result, ('AT', ''))
+        self.assertEqual(result, ('AT', ''))
         result = doublemetaphone('maisey')
-        self.assertEquals(result, ('MS', ''))
+        self.assertEqual(result, ('MS', ''))
         result = doublemetaphone('catherine')
-        self.assertEquals(result, ('K0RN', 'KTRN'))
+        self.assertEqual(result, ('K0RN', 'KTRN'))
         result = doublemetaphone('geoff')
-        self.assertEquals(result, ('JF', 'KF'))
+        self.assertEqual(result, ('JF', 'KF'))
         result = doublemetaphone('Chile')
-        self.assertEquals(result, ('XL', ''))
+        self.assertEqual(result, ('XL', ''))
         result = doublemetaphone('katherine')
-        self.assertEquals(result, ('K0RN', 'KTRN'))
+        self.assertEqual(result, ('K0RN', 'KTRN'))
         result = doublemetaphone('steven')
-        self.assertEquals(result, ('STFN', ''))
+        self.assertEqual(result, ('STFN', ''))
         result = doublemetaphone('zhang')
-        self.assertEquals(result, ('JNK', ''))
+        self.assertEqual(result, ('JNK', ''))
         result = doublemetaphone('bob')
-        self.assertEquals(result, ('PP', ''))
+        self.assertEqual(result, ('PP', ''))
         result = doublemetaphone('ray')
-        self.assertEquals(result, ('R', ''))
+        self.assertEqual(result, ('R', ''))
         result = doublemetaphone('Tux')
-        self.assertEquals(result, ('TKS', ''))
+        self.assertEqual(result, ('TKS', ''))
         result = doublemetaphone('bryan')
-        self.assertEquals(result, ('PRN', ''))
+        self.assertEqual(result, ('PRN', ''))
         result = doublemetaphone('bryce')
-        self.assertEquals(result, ('PRS', ''))
+        self.assertEqual(result, ('PRS', ''))
         result = doublemetaphone('Rapelje')
-        self.assertEquals(result, ('RPL', ''))
+        self.assertEqual(result, ('RPL', ''))
         result = doublemetaphone('richard')
-        self.assertEquals(result, ('RXRT', 'RKRT'))
+        self.assertEqual(result, ('RXRT', 'RKRT'))
         result = doublemetaphone('solilijs')
-        self.assertEquals(result, ('SLLS', ''))
+        self.assertEqual(result, ('SLLS', ''))
         result = doublemetaphone('Dallas')
-        self.assertEquals(result, ('TLS', ''))
+        self.assertEqual(result, ('TLS', ''))
         result = doublemetaphone('Schwein')
-        self.assertEquals(result, ('XN', 'XFN'))
+        self.assertEqual(result, ('XN', 'XFN'))
         result = doublemetaphone('dave')
-        self.assertEquals(result, ('TF', ''))
+        self.assertEqual(result, ('TF', ''))
         result = doublemetaphone('eric')
-        self.assertEquals(result, ('ARK', ''))
+        self.assertEqual(result, ('ARK', ''))
         result = doublemetaphone('Parachute')
-        self.assertEquals(result, ('PRKT', ''))
+        self.assertEqual(result, ('PRKT', ''))
         result = doublemetaphone('brian')
-        self.assertEquals(result, ('PRN', ''))
+        self.assertEqual(result, ('PRN', ''))
         result = doublemetaphone('randy')
-        self.assertEquals(result, ('RNT', ''))
+        self.assertEqual(result, ('RNT', ''))
         result = doublemetaphone('Through')
-        self.assertEquals(result, ('0R', 'TR'))
+        self.assertEqual(result, ('0R', 'TR'))
         result = doublemetaphone('Nowhere')
-        self.assertEquals(result, ('NR', ''))
+        self.assertEqual(result, ('NR', ''))
         result = doublemetaphone('heidi')
-        self.assertEquals(result, ('HT', ''))
+        self.assertEqual(result, ('HT', ''))
         result = doublemetaphone('Arnow')
-        self.assertEquals(result, ('ARN', 'ARNF'))
+        self.assertEqual(result, ('ARN', 'ARNF'))
         result = doublemetaphone('Thumbail')
-        self.assertEquals(result, ('0MPL', 'TMPL'))
+        self.assertEqual(result, ('0MPL', 'TMPL'))
 
     def test_homophones(self):
         self.assertEqual(
@@ -97,181 +97,181 @@ class MetaphoneTestCase(unittest.TestCase):
 
     def test_similar_names(self):
         result = doublemetaphone("Bartoš")
-        self.assertEquals(result, ('PRTS', ''))
+        self.assertEqual(result, ('PRTS', ''))
         result = doublemetaphone(u"Bartosz")
-        self.assertEquals(result, ('PRTS', 'PRTX'))
+        self.assertEqual(result, ('PRTS', 'PRTX'))
         result = doublemetaphone(u"Bartosch")
-        self.assertEquals(result, ('PRTX', ''))
+        self.assertEqual(result, ('PRTX', ''))
         result = doublemetaphone(u"Bartos")
-        self.assertEquals(result, ('PRTS', ''))
+        self.assertEqual(result, ('PRTS', ''))
 
         result = set(doublemetaphone(u"Jablonski")).intersection(
             doublemetaphone(u"Yablonsky"))
-        self.assertEquals(list(result), ['APLNSK'])
+        self.assertEqual(list(result), ['APLNSK'])
         result = set(doublemetaphone(u"Smith")).intersection(
             doublemetaphone(u"Schmidt"))
-        self.assertEquals(list(result), ['XMT'])
+        self.assertEqual(list(result), ['XMT'])
 
     def test_non_english_unicode(self):
         result = doublemetaphone("andestādītu")
-        self.assertEquals(result, ('ANTSTTT', ''))
+        self.assertEqual(result, ('ANTSTTT', ''))
 
     def test_c_cedilla(self):
         result = doublemetaphone("français")
-        self.assertEquals(result, ('FRNS', 'FRNSS'))
+        self.assertEqual(result, ('FRNS', 'FRNSS'))
         result = doublemetaphone("garçon")
-        self.assertEquals(result, ('KRSN', ''))
+        self.assertEqual(result, ('KRSN', ''))
         result = doublemetaphone("leçon")
-        self.assertEquals(result, ('LSN', ''))
+        self.assertEqual(result, ('LSN', ''))
 
     def test_various_german(self):
         result = doublemetaphone("ach")
-        self.assertEquals(result, ("AX", "AK"))
+        self.assertEqual(result, ("AX", "AK"))
         result = doublemetaphone("bacher")
-        self.assertEquals(result, ("PKR", ""))
+        self.assertEqual(result, ("PKR", ""))
         result = doublemetaphone("macher")
-        self.assertEquals(result, ("MKR", ""))
+        self.assertEqual(result, ("MKR", ""))
 
     def test_various_italian(self):
         result = doublemetaphone("bacci")
-        self.assertEquals(result, ("PX", ""))
+        self.assertEqual(result, ("PX", ""))
         result = doublemetaphone("bertucci")
-        self.assertEquals(result, ("PRTX", ""))
+        self.assertEqual(result, ("PRTX", ""))
         result = doublemetaphone("bellocchio")
-        self.assertEquals(result, ("PLX", ""))
+        self.assertEqual(result, ("PLX", ""))
         result = doublemetaphone("bacchus")
-        self.assertEquals(result, ("PKS", ""))
+        self.assertEqual(result, ("PKS", ""))
         result = doublemetaphone("focaccia")
-        self.assertEquals(result, ("FKX", ""))
+        self.assertEqual(result, ("FKX", ""))
         result = doublemetaphone("chianti")
-        self.assertEquals(result, ("KNT", ""))
+        self.assertEqual(result, ("KNT", ""))
         result = doublemetaphone("tagliaro")
-        self.assertEquals(result, ("TKLR", "TLR"))
+        self.assertEqual(result, ("TKLR", "TLR"))
         result = doublemetaphone("biaggi")
-        self.assertEquals(result, ("PJ", "PK"))
+        self.assertEqual(result, ("PJ", "PK"))
 
     def test_various_spanish(self):
         result = doublemetaphone("bajador")
-        self.assertEquals(result, ("PJTR", "PHTR"))
+        self.assertEqual(result, ("PJTR", "PHTR"))
         result = doublemetaphone("cabrillo")
-        self.assertEquals(result, ("KPRL", "KPR"))
+        self.assertEqual(result, ("KPRL", "KPR"))
         result = doublemetaphone("gallegos")
-        self.assertEquals(result, ("KLKS", "KKS"))
+        self.assertEqual(result, ("KLKS", "KKS"))
         result = doublemetaphone("San Jacinto")
-        self.assertEquals(result, ("SNHSNT", ""))
+        self.assertEqual(result, ("SNHSNT", ""))
 
     def test_various_french(self):
         result = doublemetaphone("rogier")
-        self.assertEquals(result, ("RJ", "RKR"))
+        self.assertEqual(result, ("RJ", "RKR"))
         result = doublemetaphone("breaux")
-        self.assertEquals(result, ("PR", ""))
+        self.assertEqual(result, ("PR", ""))
 
     def test_various_slavic(self):
         result = doublemetaphone("Wewski")
-        self.assertEquals(result, ("ASK", "FFSK"))
+        self.assertEqual(result, ("ASK", "FFSK"))
 
     def test_various_chinese(self):
         result = doublemetaphone("zhao")
-        self.assertEquals(result, ("J", ""))
+        self.assertEqual(result, ("J", ""))
 
     def test_dutch_origin(self):
         result = doublemetaphone("school")
-        self.assertEquals(result, ("SKL", ""))
+        self.assertEqual(result, ("SKL", ""))
         result = doublemetaphone("schooner")
-        self.assertEquals(result, ("SKNR", ""))
+        self.assertEqual(result, ("SKNR", ""))
         result = doublemetaphone("schermerhorn")
-        self.assertEquals(result, ("XRMRRN", "SKRMRRN"))
+        self.assertEqual(result, ("XRMRRN", "SKRMRRN"))
         result = doublemetaphone("schenker")
-        self.assertEquals(result, ("XNKR", "SKNKR"))
+        self.assertEqual(result, ("XNKR", "SKNKR"))
 
     def test_ch_words(self):
         result = doublemetaphone("Charac")
-        self.assertEquals(result, ("KRK", ""))
+        self.assertEqual(result, ("KRK", ""))
         result = doublemetaphone("Charis")
-        self.assertEquals(result, ("KRS", ""))
+        self.assertEqual(result, ("KRS", ""))
         result = doublemetaphone("chord")
-        self.assertEquals(result, ("KRT", ""))
+        self.assertEqual(result, ("KRT", ""))
         result = doublemetaphone("Chym")
-        self.assertEquals(result, ("KM", ""))
+        self.assertEqual(result, ("KM", ""))
         result = doublemetaphone("Chia")
-        self.assertEquals(result, ("K", ""))
+        self.assertEqual(result, ("K", ""))
         result = doublemetaphone("chem")
-        self.assertEquals(result, ("KM", ""))
+        self.assertEqual(result, ("KM", ""))
         result = doublemetaphone("chore")
-        self.assertEquals(result, ("XR", ""))
+        self.assertEqual(result, ("XR", ""))
         result = doublemetaphone("orchestra")
-        self.assertEquals(result, ("ARKSTR", ""))
+        self.assertEqual(result, ("ARKSTR", ""))
         result = doublemetaphone("architect")
-        self.assertEquals(result, ("ARKTKT", ""))
+        self.assertEqual(result, ("ARKTKT", ""))
         result = doublemetaphone("orchid")
-        self.assertEquals(result, ("ARKT", ""))
+        self.assertEqual(result, ("ARKT", ""))
 
     def test_cc_words(self):
         result = doublemetaphone("accident")
-        self.assertEquals(result, ("AKSTNT", ""))
+        self.assertEqual(result, ("AKSTNT", ""))
         result = doublemetaphone("accede")
-        self.assertEquals(result, ("AKST", ""))
+        self.assertEqual(result, ("AKST", ""))
         result = doublemetaphone("succeed")
-        self.assertEquals(result, ("SKST", ""))
+        self.assertEqual(result, ("SKST", ""))
 
     def test_mc_words(self):
         result = doublemetaphone("mac caffrey")
-        self.assertEquals(result, ("MKFR", ""))
+        self.assertEqual(result, ("MKFR", ""))
         result = doublemetaphone("mac gregor")
-        self.assertEquals(result, ("MKRKR", ""))
+        self.assertEqual(result, ("MKRKR", ""))
         result = doublemetaphone("mc crae")
-        self.assertEquals(result, ("MKR", ""))
+        self.assertEqual(result, ("MKR", ""))
         result = doublemetaphone("mcclain")
-        self.assertEquals(result, ("MKLN", ""))
+        self.assertEqual(result, ("MKLN", ""))
 
     def test_gh_words(self):
         result = doublemetaphone("laugh")
-        self.assertEquals(result, ("LF", ""))
+        self.assertEqual(result, ("LF", ""))
         result = doublemetaphone("cough")
-        self.assertEquals(result, ("KF", ""))
+        self.assertEqual(result, ("KF", ""))
         result = doublemetaphone("rough")
-        self.assertEquals(result, ("RF", ""))
+        self.assertEqual(result, ("RF", ""))
 
     def test_g3_words(self):
         result = doublemetaphone("gya")
-        self.assertEquals(result, ("K", "J"))
+        self.assertEqual(result, ("K", "J"))
         result = doublemetaphone("ges")
-        self.assertEquals(result, ("KS", "JS"))
+        self.assertEqual(result, ("KS", "JS"))
         result = doublemetaphone("gep")
-        self.assertEquals(result, ("KP", "JP"))
+        self.assertEqual(result, ("KP", "JP"))
         result = doublemetaphone("geb")
-        self.assertEquals(result, ("KP", "JP"))
+        self.assertEqual(result, ("KP", "JP"))
         result = doublemetaphone("gel")
-        self.assertEquals(result, ("KL", "JL"))
+        self.assertEqual(result, ("KL", "JL"))
         result = doublemetaphone("gey")
-        self.assertEquals(result, ("K", "J"))
+        self.assertEqual(result, ("K", "J"))
         result = doublemetaphone("gib")
-        self.assertEquals(result, ("KP", "JP"))
+        self.assertEqual(result, ("KP", "JP"))
         result = doublemetaphone("gil")
-        self.assertEquals(result, ("KL", "JL"))
+        self.assertEqual(result, ("KL", "JL"))
         result = doublemetaphone("gin")
-        self.assertEquals(result, ("KN", "JN"))
+        self.assertEqual(result, ("KN", "JN"))
         result = doublemetaphone("gie")
-        self.assertEquals(result, ("K", "J"))
+        self.assertEqual(result, ("K", "J"))
         result = doublemetaphone("gei")
-        self.assertEquals(result, ("K", "J"))
+        self.assertEqual(result, ("K", "J"))
         result = doublemetaphone("ger")
-        self.assertEquals(result, ("KR", "JR"))
+        self.assertEqual(result, ("KR", "JR"))
         result = doublemetaphone("danger")
-        self.assertEquals(result, ("TNJR", "TNKR"))
+        self.assertEqual(result, ("TNJR", "TNKR"))
         result = doublemetaphone("manager")
-        self.assertEquals(result, ("MNKR", "MNJR"))
+        self.assertEqual(result, ("MNKR", "MNJR"))
         result = doublemetaphone("dowager")
-        self.assertEquals(result, ("TKR", "TJR"))
+        self.assertEqual(result, ("TKR", "TJR"))
 
     def test_pb_words(self):
         result = doublemetaphone("Campbell")
-        self.assertEquals(result, ("KMPL", ""))
+        self.assertEqual(result, ("KMPL", ""))
         result = doublemetaphone("raspberry")
-        self.assertEquals(result, ("RSPR", ""))
+        self.assertEqual(result, ("RSPR", ""))
 
     def test_th_words(self):
         result = doublemetaphone("Thomas")
-        self.assertEquals(result, ("TMS", ""))
+        self.assertEqual(result, ("TMS", ""))
         result = doublemetaphone("Thames")
-        self.assertEquals(result, ("TMS", ""))
+        self.assertEqual(result, ("TMS", ""))
-- 
2.39.1

